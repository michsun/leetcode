{
	"LeetCode C++ Template": {
		"prefix": "leetcpp",
		"scope": "cpp",
		"body": [
		  "// ${1:link}",
		  "#include <bits/stdc++.h>",
		  "",
		  "using namespace std;",
		  "",
		  "$0",
		  "",
		  "int main() {",
		  "",
		  "    return 0;",
		  "}"
		],
		"description": "LeetCode C++ Template"
	},
	"Print Vector Template": {
		"prefix": "printvec",
		"scope": "cpp",
		"body": [
			"template <typename T>",
			"void printVec(vector<T> &v) {",
			"    for (auto t : v) {",
			"        cout << t << ' ';",
			"    }",
			"    cout << '\\n';",
			"}"
		  ],
		"description": "Print Vector Template"
	},
	"C++ Binary Tree Definition": {
		"prefix": "binarytree",
		"scope": "cpp",
		"body": [
		  "// Definition for a binary tree node.",
		  "struct TreeNode {",
		  "    int val;",
		  "    TreeNode *left;",
		  "    TreeNode *right;",
		  "    TreeNode() : val(0), left(nullptr), right(nullptr) {}",
		  "    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}",
		  "    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}",
		  "}",
		  ""
		],
		"description": "C++ Binary Tree Definition"
	},
	"C++ Singly-Linked List Definition": {
		"prefix": "linkedlist single",
		"scope": "cpp",
		"body": [
		  "// Definition for singly-linked list.",
		  "struct ListNode {",
		  "    int val;",
		  "    ListNode *next;",
		  "    ListNode(int x) : val(x), next(NULL) {}",
		  "};",
		  ""
		],
		"description": "C++ Binary Tree Definition"
	}
}